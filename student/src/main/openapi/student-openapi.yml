openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: 'http://localhost:8080'
    description: Generated server url
paths:
  '/api/courses/{id}':
    get:
      tags:
        - course-controller
      operationId: getById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseDto'
    put:
      tags:
        - course-controller
      operationId: modifyCourse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseDto'
    delete:
      tags:
        - course-controller
      operationId: deleteCourse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/courses:
    post:
      tags:
        - course-controller
      operationId: createCourse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseDto'
  /api/courses/search:
    get:
      tags:
        - course-controller
      operationId: searchCourses2
      parameters:
        - name: full
          in: query
          required: false
          schema:
            type: boolean
        - schema:
            type: integer
          in: query
          name: page
        - schema:
            type: integer
          in: query
          name: size
        - schema:
            type: string
          in: query
          name: sort
        - schema:
            type: integer
            format: int64
          in: query
          name: id
        - schema:
            type: string
          in: query
          name: name
        - schema:
            type: integer
            format: int64
          in: query
          name: students.id
        - schema:
            type: string
          in: query
          name: teachers.name
        - schema:
            type: array
            items:
              type: string
          in: query
          name: students.semester
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseDto'
      summary: ''
    post:
      tags:
        - course-controller
      operationId: searchCourses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CourseDto'
  '/api/teachers/{id}':
    get:
      tags:
        - teacher-controller
      operationId: findById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherDto'
  '/api/students/{id}':
    get:
      tags:
        - student-controller
      operationId: findById_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDto'
  '/api/courses/{id}/history':
    get:
      tags:
        - course-controller
      operationId: getHistoryById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryDataCourseDto'
  '/api/courses/{id}/versions':
    parameters:
      - schema:
          type: integer
          format: int64
        name: id
        in: path
    get:
      summary: Your GET endpoint
      tags:
        - course-controller
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseDto'
      operationId: getVersionAt
      parameters:
        - schema:
            type: string
            format: date-time
          in: query
          name: at
          required: true
  '/api/students/{id}/profile':
    parameters:
      - schema:
          type: integer
          format: int64
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - student-controller
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                properties: {}
            application/json:
              schema:
                type: string
      operationId: getProfilePicture
      parameters: []
    post:
      summary: ''
      operationId: uploadProfilePicture
      responses:
        '200':
          description: OK
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                  format: binary
          application/xml:
            schema:
              type: object
              properties: {}
          text/html:
            schema:
              type: object
              properties: {}
          application/pdf:
            schema:
              type: object
              properties:
                content:
                  type: string
                  format: binary
        description: ''
      tags:
        - student-controller
    delete:
      summary: ''
      tags:
        - student-controller
      operationId: deleteProfilePicture
      responses:
        '200':
          description: OK
components:
  schemas:
    CourseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        students:
          type: array
          items:
            $ref: '#/components/schemas/StudentDto'
        teachers:
          type: array
          items:
            $ref: '#/components/schemas/TeacherDto'
    StudentDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        birthdate:
          type: string
          format: date
        semester:
          type: integer
          format: int32
    TeacherDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        birthdate:
          type: string
          format: date
    HistoryDataCourseDto:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CourseDto'
        revType:
          type: string
          enum:
            - ADD
            - MOD
            - DEL
        revision:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
